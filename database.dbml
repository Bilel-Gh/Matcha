// Table des utilisateurs
Table users {
  id integer [primary key]
  email varchar [unique, not null]
  username varchar [unique, not null]
  firstname varchar [not null]
  lastname varchar [not null]
  password varchar [not null]
  gender varchar [note: 'male, female, other']
  sexual_preferences varchar [note: 'male, female, both']
  biography text
  latitude float
  longitude float
  fame_rating integer [default: 0]
  last_connection timestamp
  is_online boolean [default: false]
  email_verified boolean [default: false]
  created_at timestamp [default: `now()`]
}

// Table des photos (max 5 par utilisateur)
Table photos {
  id integer [primary key]
  user_id integer [not null]
  url varchar [not null]
  is_profile_picture boolean [default: false]
  created_at timestamp [default: `now()`]
}

// Table des centres d'intérêt (tags)
Table interests {
  id integer [primary key]
  name varchar [unique, not null]
  tag varchar [unique, not null]
}

// Table de liaison users-interests (relation N-N)
Table user_interests {
  user_id integer [not null]
  interest_id integer [not null]
  created_at timestamp [default: `now()`]

  indexes {
    (user_id, interest_id) [pk] // Clé primaire composite
  }
}

// Table des likes entre utilisateurs
Table likes {
  id integer [primary key]
  liker_id integer [not null]
  liked_id integer [not null]
  created_at timestamp [default: `now()`]

  indexes {
    (liker_id, liked_id) [unique] // Un utilisateur ne peut liker qu'une fois
  }
}

// Table des visites de profil
Table visits {
  id integer [primary key]
  visitor_id integer [not null]
  visited_id integer [not null]
  visit_date timestamp [default: `now()`]
}

// Table des blocages
Table blocks {
  id integer [primary key]
  blocker_id integer [not null]
  blocked_id integer [not null]
  created_at timestamp [default: `now()`]

  indexes {
    (blocker_id, blocked_id) [unique] // Un seul blocage possible entre deux users
  }
}

// Table des signalements
Table reports {
  id integer [primary key]
  reporter_id integer [not null]
  reported_id integer [not null]
  reason text [not null]
  created_at timestamp [default: `now()`]
}

// Table des messages
Table messages {
  id integer [primary key]
  sender_id integer [not null]
  receiver_id integer [not null]
  content text [not null]
  is_read boolean [default: false]
  sent_at timestamp [default: `now()`]
}

// Table des notifications
Table notifications {
  id integer [primary key]
  user_id integer [not null]
  type varchar [note: 'like, visit, message, match']
  content text [not null]
  is_read boolean [default: false]
  created_at timestamp [default: `now()`]
}

// Définition des relations
Ref: photos.user_id > users.id [delete: cascade]
Ref: user_interests.user_id > users.id [delete: cascade]
Ref: user_interests.interest_id > interests.id [delete: cascade]
Ref: likes.liker_id > users.id [delete: cascade]
Ref: likes.liked_id > users.id [delete: cascade]
Ref: visits.visitor_id > users.id [delete: cascade]
Ref: visits.visited_id > users.id [delete: cascade]
Ref: blocks.blocker_id > users.id [delete: cascade]
Ref: blocks.blocked_id > users.id [delete: cascade]
Ref: reports.reporter_id > users.id [delete: cascade]
Ref: reports.reported_id > users.id [delete: cascade]
Ref: messages.sender_id > users.id [delete: cascade]
Ref: messages.receiver_id > users.id [delete: cascade]
Ref: notifications.user_id > users.id [delete: cascade]

Ref: "users"."fame_rating" < "users"."email_verified"